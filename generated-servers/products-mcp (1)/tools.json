{
  "api_name": "products",
  "base_url": "http://localhost:3000",
  "tools": [
    {
      "name": "listProducts",
      "description": "Retrieve a paginated list of products",
      "input_schema": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20,
            "description": "Number of items per page"
          },
          "category": {
            "type": "string",
            "description": "Filter by category"
          }
        },
        "required": []
      },
      "endpoint_mapping": {
        "path": "/products",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "createProduct",
      "description": "Create a new product",
      "input_schema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "endpoint_mapping": {
        "path": "/products",
        "method": "post"
      },
      "is_composite": false
    },
    {
      "name": "getProduct",
      "description": "Get product details",
      "input_schema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId"
        ]
      },
      "endpoint_mapping": {
        "path": "/products/{productId}",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "updateProduct",
      "description": "Update a product",
      "input_schema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId"
        ]
      },
      "endpoint_mapping": {
        "path": "/products/{productId}",
        "method": "put"
      },
      "is_composite": false
    },
    {
      "name": "deleteProduct",
      "description": "Delete a product",
      "input_schema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId"
        ]
      },
      "endpoint_mapping": {
        "path": "/products/{productId}",
        "method": "delete"
      },
      "is_composite": false
    },
    {
      "name": "listOrders",
      "description": "List all orders",
      "input_schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Filter by order status"
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "description": "Filter by customer ID"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20,
            "description": "Number of items per page"
          }
        },
        "required": []
      },
      "endpoint_mapping": {
        "path": "/orders",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "createOrder",
      "description": "Create a new order",
      "input_schema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "endpoint_mapping": {
        "path": "/orders",
        "method": "post"
      },
      "is_composite": false
    },
    {
      "name": "getOrder",
      "description": "Get order details",
      "input_schema": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "orderId"
        ]
      },
      "endpoint_mapping": {
        "path": "/orders/{orderId}",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "listCustomers",
      "description": "List all customers",
      "input_schema": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string",
            "description": "Search by name or email"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20,
            "description": "Number of items per page"
          }
        },
        "required": []
      },
      "endpoint_mapping": {
        "path": "/customers",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "createCustomer",
      "description": "Create a new customer",
      "input_schema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "endpoint_mapping": {
        "path": "/customers",
        "method": "post"
      },
      "is_composite": false
    },
    {
      "name": "getCustomer",
      "description": "Get customer details",
      "input_schema": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "customerId"
        ]
      },
      "endpoint_mapping": {
        "path": "/customers/{customerId}",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "listCustomerOrders",
      "description": "List orders for a customer",
      "input_schema": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20,
            "description": "Number of items per page"
          }
        },
        "required": [
          "customerId"
        ]
      },
      "endpoint_mapping": {
        "path": "/customers/{customerId}/orders",
        "method": "get"
      },
      "is_composite": false
    }
  ],
  "composite_tools": [
    {
      "name": "get_customer_with_recent_products",
      "description": "Retrieves customer details along with the last 10 products they ordered, providing a comprehensive view of the customer's profile and recent purchase history",
      "use_case_description": "retrieve a customer detail with the last 10 products they ordered",
      "input_schema": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The unique identifier of the customer"
          }
        },
        "required": [
          "customerId"
        ]
      },
      "endpoint_mappings": [
        {
          "path": "/products/{productId}",
          "method": "get",
          "operation_id": "getProduct",
          "purpose": "Retrieves detailed product information for each unique product found in the customer's recent orders"
        },
        {
          "path": "/orders/{orderId}",
          "method": "get",
          "operation_id": "getOrder",
          "purpose": "Fetches detailed information for each recent order to extract the product IDs that were purchased"
        },
        {
          "path": "/customers/{customerId}/orders",
          "method": "get",
          "operation_id": "listCustomerOrders",
          "purpose": "Gets the customer's order history to identify recent orders and extract product IDs from those orders"
        },
        {
          "path": "/customers/{customerId}",
          "method": "get",
          "operation_id": "getCustomer",
          "purpose": "Retrieves the customer's basic profile information including name, contact details, and account information"
        }
      ],
      "orchestration_logic": "1) Call GET /customers/{customerId} to retrieve the customer's basic profile information. 2) Call GET /customers/{customerId}/orders with limit=10 parameter to get the customer's 10 most recent orders. 3) For each order returned, call GET /orders/{orderId} to get detailed order information including the products in each order. 4) Extract all unique product IDs from the order details, maintaining order recency. 5) For each unique product ID (up to 10 most recent), call GET /products/{productId} to retrieve detailed product information. 6) Combine the customer details from step 1 with the enriched product information from step 5, ensuring products are listed in order of recency based on when they were last ordered. 7) Return a consolidated response containing the customer profile and an array of the last 10 products with their full details.",
      "is_composite": true
    }
  ]
}