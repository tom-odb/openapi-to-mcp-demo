{
  "api_name": "products",
  "base_url": "http://localhost:3000",
  "tools": [
    {
      "name": "listProducts",
      "description": "Retrieve a paginated list of products",
      "input_schema": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20,
            "description": "Number of items per page"
          },
          "category": {
            "type": "string",
            "description": "Filter by category"
          }
        },
        "required": []
      },
      "endpoint_mapping": {
        "path": "/products",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "createProduct",
      "description": "Create a new product",
      "input_schema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "endpoint_mapping": {
        "path": "/products",
        "method": "post"
      },
      "is_composite": false
    },
    {
      "name": "getProduct",
      "description": "Get product details",
      "input_schema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId"
        ]
      },
      "endpoint_mapping": {
        "path": "/products/{productId}",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "updateProduct",
      "description": "Update a product",
      "input_schema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId"
        ]
      },
      "endpoint_mapping": {
        "path": "/products/{productId}",
        "method": "put"
      },
      "is_composite": false
    },
    {
      "name": "deleteProduct",
      "description": "Delete a product",
      "input_schema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "productId"
        ]
      },
      "endpoint_mapping": {
        "path": "/products/{productId}",
        "method": "delete"
      },
      "is_composite": false
    },
    {
      "name": "listOrders",
      "description": "List all orders",
      "input_schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Filter by order status"
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "description": "Filter by customer ID"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20,
            "description": "Number of items per page"
          }
        },
        "required": []
      },
      "endpoint_mapping": {
        "path": "/orders",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "createOrder",
      "description": "Create a new order",
      "input_schema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "endpoint_mapping": {
        "path": "/orders",
        "method": "post"
      },
      "is_composite": false
    },
    {
      "name": "getOrder",
      "description": "Get order details",
      "input_schema": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "orderId"
        ]
      },
      "endpoint_mapping": {
        "path": "/orders/{orderId}",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "listCustomers",
      "description": "List all customers",
      "input_schema": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string",
            "description": "Search by name or email"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20,
            "description": "Number of items per page"
          }
        },
        "required": []
      },
      "endpoint_mapping": {
        "path": "/customers",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "createCustomer",
      "description": "Create a new customer",
      "input_schema": {
        "type": "object",
        "properties": {},
        "required": []
      },
      "endpoint_mapping": {
        "path": "/customers",
        "method": "post"
      },
      "is_composite": false
    },
    {
      "name": "getCustomer",
      "description": "Get customer details",
      "input_schema": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "customerId"
        ]
      },
      "endpoint_mapping": {
        "path": "/customers/{customerId}",
        "method": "get"
      },
      "is_composite": false
    },
    {
      "name": "listCustomerOrders",
      "description": "List orders for a customer",
      "input_schema": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20,
            "description": "Number of items per page"
          }
        },
        "required": [
          "customerId"
        ]
      },
      "endpoint_mapping": {
        "path": "/customers/{customerId}/orders",
        "method": "get"
      },
      "is_composite": false
    }
  ],
  "composite_tools": [
    {
      "name": "get_customer_with_latest_products",
      "description": "Retrieve a customer's details along with the latest 10 products they ordered, sorted by order date",
      "use_case_description": "Retrieve al customer with the latest 10 products they ordered.",
      "input_schema": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The unique identifier of the customer"
          }
        },
        "required": [
          "customerId"
        ]
      },
      "endpoint_mappings": [
        {
          "path": "/products/{productId}",
          "method": "get",
          "operation_id": "getProduct",
          "purpose": "Retrieves complete product details for each product found in the customer's recent orders"
        },
        {
          "path": "/orders",
          "method": "get",
          "operation_id": "listOrders",
          "purpose": ""
        },
        {
          "path": "/orders/{orderId}",
          "method": "get",
          "operation_id": "getOrder",
          "purpose": "Fetches detailed order information including product IDs for each recent order"
        },
        {
          "path": "/customers/{customerId}/orders",
          "method": "get",
          "operation_id": "listCustomerOrders",
          "purpose": "Gets the list of orders for the specific customer, ordered by most recent first"
        },
        {
          "path": "/customers/{customerId}",
          "method": "get",
          "operation_id": "getCustomer",
          "purpose": "Retrieves the customer's basic information and profile details"
        },
        {
          "path": "/customers",
          "method": "get",
          "operation_id": "listCustomers",
          "purpose": ""
        }
      ],
      "orchestration_logic": "1) Call GET /customers/{customerId} with the provided customerId to retrieve customer details and verify the customer exists. 2) Call GET /customers/{customerId}/orders with limit=10 to get the customer's 10 most recent orders (assuming API returns orders sorted by date desc). 3) For each order returned in step 2, call GET /orders/{orderId} using the orderId to get detailed order information including the list of product IDs in each order. 4) Extract all unique product IDs from the order details and call GET /products/{productId} for each unique product to get complete product information. 5) Combine the results by creating a response object containing the customer details from step 1 and an array of the latest 10 products with their full details, maintaining the chronological order based on when they were ordered. 6) Return the combined customer and products data as a unified response.",
      "is_composite": true
    }
  ]
}